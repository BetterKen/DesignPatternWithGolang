package main

//策略（Strategy）模式的定义：该模式定义了一系列算法，
//并将每个算法封装起来，使它们可以相互替换，
//且算法的变化不会影响使用算法的客户。策略模式属于对象行为模式，
//它通过对算法进行封装，把使用算法的责任和算法的实现分割开来，并
//委派给不同的对象对这些算法进行管理。

//模板方法模式的主要思想：定义一个算法流程，将一些特定步骤的具体实现、延迟到子类
//。使得可以在不改变算法流程的情况下，通过不同的子类、来实现“定制”流程中的特定的步骤。
//
//策略模式的主要思想：使不同的算法可以被相互替换，而不影响客户端的使用。
func main()  {
	c := &Context{}
	sa := &ConcreteA{}
	sb := &ConcreteB{}

	c.setStrategy(sa)
	c.strategyMethod()

	c.setStrategy(sb)
	c.strategyMethod()
}